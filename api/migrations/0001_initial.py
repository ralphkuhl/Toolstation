# Generated by Django 5.2.3 on 2025-06-29 08:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AssetType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("naam", models.CharField(max_length=100, unique=True)),
                ("omschrijving", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("naam", models.CharField(max_length=255)),
                ("adres", models.CharField(blank=True, max_length=255, null=True)),
                ("postcode", models.CharField(blank=True, max_length=10, null=True)),
                ("plaats", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "locatie_gebouw_omschrijving",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "contactpersoon_naam",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "contactpersoon_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "contactpersoon_telefoon",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("aangemaakt_op", models.DateTimeField(auto_now_add=True)),
                ("gewijzigd_op", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("monteur", "Monteur"),
                            ("inspecteur", "Inspecteur"),
                            ("admin", "Administrator"),
                        ],
                        default="monteur",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("naam_omschrijving", models.CharField(max_length=255)),
                ("merk", models.CharField(blank=True, max_length=100, null=True)),
                ("model", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "serienummer",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                ("installatiedatum", models.DateField(blank=True, null=True)),
                (
                    "locatie_in_gebouw",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "specificaties_bijzonderheden",
                    models.TextField(blank=True, null=True),
                ),
                ("aangemaakt_op", models.DateTimeField(auto_now_add=True)),
                ("gewijzigd_op", models.DateTimeField(auto_now=True)),
                (
                    "asset_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.assettype"
                    ),
                ),
                (
                    "klant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="api.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MaintenancePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("naam", models.CharField(max_length=255)),
                (
                    "frequentie",
                    models.CharField(
                        choices=[
                            ("maandelijks", "Maandelijks"),
                            ("halfjaarlijks", "Halfjaarlijks"),
                            ("jaarlijks", "Jaarlijks"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "standaard_omschrijving_werkzaamheden",
                    models.TextField(blank=True, null=True),
                ),
                ("actief", models.BooleanField(default=True)),
                ("aangemaakt_op", models.DateTimeField(auto_now_add=True)),
                ("gewijzigd_op", models.DateTimeField(auto_now=True)),
                (
                    "asset",
                    models.ForeignKey(
                        blank=True,
                        help_text="Of plan voor een individuele asset (override type)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.asset",
                    ),
                ),
                (
                    "asset_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Plan voor een specifiek asset type",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.assettype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MaintenanceTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("omschrijving_werkzaamheden", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("gepland", "Gepland"),
                            ("in_uitvoering", "In uitvoering"),
                            ("voltooid", "Voltooid"),
                            ("geannuleerd", "Geannuleerd"),
                        ],
                        default="gepland",
                        max_length=20,
                    ),
                ),
                ("geplande_startdatum", models.DateField(blank=True, null=True)),
                ("streef_einddatum", models.DateField()),
                (
                    "daadwerkelijke_startdatum",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "daadwerkelijke_einddatum",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("aangemaakt_op", models.DateTimeField(auto_now_add=True)),
                ("gewijzigd_op", models.DateTimeField(auto_now=True)),
                (
                    "asset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="api.asset",
                    ),
                ),
                (
                    "gebruiker_toegewezen",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "onderhoudsplan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.maintenanceplan",
                    ),
                ),
            ],
        ),
    ]
